---
# tasks file for deploy_mysql

- name: Install the latest version of MySql Server
  ansible.builtin.apt:
    name: mysql-server
    state: latest

- name: Make sure a MySql service Started and running
  ansible.builtin.systemd:
    name: mysql.service
    state: started
    enabled: yes

- name: Installing  python3-pip
  apt: pkg={{ item }}
  with_items:
    - python3-pip

- name: Install pymysql for working with DataBase
  ansible.builtin.pip:
    name: pymysql

# Place my.cnf.j2  connection file to /etc/mysql   (!!! After Activation restart)
- name: Copy my.cnf.j2 file to config
  ansible.builtin.template:
    src: my.cnf.j2
    dest: "/etc/mysql/my.cnf"

# Restart MySql Service after configuring
- name: restart mysql
  service: name=mysql state=restarted

#===================================================================================
# Copy sql file to destination for creating our database
- name: Copy SQL file to target host
  ansible.builtin.copy:
    src: script.sql
    dest: /tmp/script.sql

# Checking existing database
- name: check if DB exists
  become: yes
  shell: mysql -e 'SHOW DATABASES;'
  register: dbstatus_exist

# Creating database for our application
- name: Create a new database with name "{{ app_db_name }}"
  become: yes
  community.mysql.mysql_db:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: "{{ app_db_name }}"
    state: import
    target: /tmp/script.sql
    force: no
  when: app_db_name not in dbstatus_exist.stdout_lines

# Creating user database for our application
- name: Create a new database user and password
  become: yes
  community.mysql.mysql_user:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: "{{app_db_username}}"
    password: "{{app_db_password}}"
    priv: '{{app_db_name}}.*:ALL'
    host: "%"
    state: present
